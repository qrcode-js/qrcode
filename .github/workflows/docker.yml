name: "Docker"

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        id: qemu
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}
      - name: Extract metadata from repository
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          platforms: ${{ steps.qemu.outputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # - name: Check Health status
      #   run: |
      #     docker run -d --name qrcode-test qr-code:test
      #     state=$(docker inspect -f '{{ .State.Health.Status}}' qrcode-test)
      #     if [ $state != "starting" ]; then
      #       exit 1
      #     fi
      #     sleep 10
      #     state=$(docker inspect -f '{{ .State.Health.Status}}' qrcode-test)
      #     docker stop qrcode-test
      #     if [ $state == "healthy" ]; then
      #       exit 0
      #     else
      #       exit 1
      #     fi
      # - name: Push to ghcr.io with retries
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: nick-invision/retry@v2
      #   with:
      #     timeout_minutes: 3
      #     max_attempts: 3
      #     command: echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r i; do echo "Pushing $i"; docker push $i; done
